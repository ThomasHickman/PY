{
    "downsampling": {},
    "summary": "Concatenate VCF files of non-overlapping genome intervals, all with the same set of samples",
    "refwindow": {},
    "description": "\n\n <p>\n The main purpose of this tool is to speed up the gather function when using scatter-gather parallelization.\n This tool concatenates the scattered output VCF files. It assumes that:\n <ul>\n     <li>All the input VCFs (or BCFs) contain the same samples in the same order.</li>\n     <li>The variants in each input file are from non-overlapping (scattered) intervals.</li>\n </ul>\n </p>\n <p>When the input files are already sorted based on the intervals start positions, use -assumeSorted.</p>\n\n <h3>Input</h3>\n <p>\n Two or more variant sets to combine. They should be of non-overlapping genome intervals and with the same\n samples (sorted in the same order). If the files are ordered according to the appearance of intervals in the ref\n genome, then one can use the -assumeSorted flag.\n </p>\n\n <h3>Output</h3>\n <p>\n A combined VCF or BCF. The output file should have the same extension as the input(s).\n <\\p>\n\n <h3>Important note</h3>\n <p>This is a command-line utility that bypasses the GATK engine. As a result, the command-line you must use to\n invoke it is a little different from other GATK tools (see example below), and it does not accept any of the\n classic \"CommandLineGATK\" arguments.</p>\n\n <h3>Usage example</h3>\n <pre>\n java -cp GenomeAnalysisTK.jar org.broadinstitute.gatk.tools.CatVariants \\\n    -R reference.fasta \\\n    -V input1.vcf \\\n    -V input2.vcf \\\n    -out output.vcf \\\n    -assumeSorted\n </pre>\n\n <h3>Caveat</h3>\n <p>Currently the tool is more efficient when working with VCFs than with BCFs.</p>",
    "group": "Variant Evaluation and Manipulation Tools",
    "name": "CatVariants",
    "annotinfo": "",
    "walkertype": "",
    "annotfield": "",
    "parallel": [],
    "arguments": [
        {
            "required": "no",
            "summary": "assumeSorted should be true if the input files are already sorted (based on the position of the variants)",
            "synonyms": "-assumeSorted",
            "maxValue": "NA",
            "fulltext": "",
            "maxRecValue": "NA",
            "defaultValue": "NA",
            "kind": "optional_flag",
            "type": "Boolean",
            "minRecValue": "NA",
            "name": "--assumeSorted",
            "rodTypes": "NA",
            "minValue": "NA",
            "options": []
        },
        {
            "required": "no",
            "summary": "Generate the help message",
            "synonyms": "-h",
            "maxValue": "NA",
            "fulltext": "This will produce a help message in the terminal with general usage information, listing available arguments\n as well as tool-specific information if applicable.",
            "maxRecValue": "NA",
            "defaultValue": "NA",
            "kind": "optional_flag",
            "type": "Boolean",
            "minRecValue": "NA",
            "name": "--help",
            "rodTypes": "NA",
            "minValue": "NA",
            "options": []
        },
        {
            "required": "no",
            "summary": "Set the logging location",
            "synonyms": "-log",
            "maxValue": "NA",
            "fulltext": "File to save the logging output.",
            "maxRecValue": "NA",
            "defaultValue": "NA",
            "kind": "optional_out",
            "type": "String",
            "minRecValue": "NA",
            "name": "--log_to_file",
            "rodTypes": "NA",
            "minValue": "NA",
            "options": []
        },
        {
            "required": "no",
            "summary": "Set the minimum level of logging",
            "synonyms": "-l",
            "maxValue": "NA",
            "fulltext": "Setting INFO gets you INFO up to FATAL, setting ERROR gets you ERROR and FATAL level logging, and so on.",
            "maxRecValue": "NA",
            "defaultValue": "NA",
            "kind": "optional_param",
            "type": "String",
            "minRecValue": "NA",
            "name": "--logging_level",
            "rodTypes": "NA",
            "minValue": "NA",
            "options": []
        },
        {
            "required": "yes",
            "summary": "output file",
            "synonyms": "-out",
            "maxValue": "NA",
            "fulltext": "",
            "maxRecValue": "NA",
            "defaultValue": "NA",
            "kind": "required_out",
            "type": "File",
            "minRecValue": "NA",
            "name": "--outputFile",
            "rodTypes": "NA",
            "minValue": "NA",
            "options": []
        },
        {
            "required": "yes",
            "summary": "genome reference file <name>.fasta",
            "synonyms": "-R",
            "maxValue": "NA",
            "fulltext": "",
            "maxRecValue": "NA",
            "defaultValue": "NA",
            "kind": "required_in",
            "type": "File",
            "minRecValue": "NA",
            "name": "--reference",
            "rodTypes": "NA",
            "minValue": "NA",
            "options": []
        },
        {
            "required": "yes",
            "summary": "Input VCF file/s",
            "synonyms": "-V",
            "maxValue": "NA",
            "fulltext": "The VCF or BCF files to merge together\n\n CatVariants can take any number of -V arguments on the command line.  Each -V argument\n will be included in the final merged output VCF/BCF. The order of arguments does not matter, but it runs more\n efficiently if they are sorted based on the intervals and the assumeSorted argument is used.",
            "maxRecValue": "NA",
            "defaultValue": "NA",
            "kind": "required_in",
            "type": "List[File]",
            "minRecValue": "NA",
            "name": "--variant",
            "rodTypes": "NA",
            "minValue": "NA",
            "options": []
        },
        {
            "required": "no",
            "summary": "the parameter (bin width or features per bin) to pass to the VCF/BCF IndexCreator",
            "synonyms": "NA",
            "maxValue": "Infinity",
            "fulltext": "",
            "maxRecValue": "NA",
            "defaultValue": "-1",
            "kind": "optional_param",
            "type": "Integer",
            "minRecValue": "NA",
            "name": "--variant_index_parameter",
            "rodTypes": "NA",
            "minValue": "-Infinity",
            "options": []
        },
        {
            "required": "no",
            "summary": "which type of IndexCreator to use for VCF/BCF indices",
            "synonyms": "NA",
            "maxValue": "NA",
            "fulltext": "",
            "maxRecValue": "NA",
            "defaultValue": "NA",
            "kind": "optional_param",
            "type": "GATKVCFIndexType",
            "minRecValue": "NA",
            "name": "--variant_index_type",
            "rodTypes": "NA",
            "minValue": "NA",
            "options": [
                {
                    "name": "DYNAMIC_SEEK",
                    "summary": ""
                },
                {
                    "name": "DYNAMIC_SIZE",
                    "summary": ""
                },
                {
                    "name": "LINEAR",
                    "summary": ""
                },
                {
                    "name": "INTERVAL",
                    "summary": ""
                }
            ]
        },
        {
            "required": "no",
            "summary": "Output version information",
            "synonyms": "-version",
            "maxValue": "NA",
            "fulltext": "Use this to check the version number of the GATK executable you are invoking. Note that the version number is\n always included in the output at the start of every run as well as any error message.",
            "maxRecValue": "NA",
            "defaultValue": "NA",
            "kind": "optional_flag",
            "type": "Boolean",
            "minRecValue": "NA",
            "name": "--version",
            "rodTypes": "NA",
            "minValue": "NA",
            "options": []
        }
    ],
    "readfilters": [],
    "activeregion": {},
    "partitiontype": ""
}